// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   ml7715@EEWS104A-020
//  Generated date: Tue Mar 15 14:30:25 2016
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    mean_vga_core
// ------------------------------------------------------------------


module mean_vga_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [89:0] vin_rsc_mgc_in_wire_d;
  output [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  reg [9:0] regs_regs_slc_regs_regs_2_3_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_4_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_5_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_6_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_1_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_7_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_2_itm;
  reg [9:0] regs_regs_slc_regs_regs_2_8_itm;
  reg [89:0] reg_regs_regs_0_sva_cse;
  wire [9:0] abs_acc_sdt;
  wire [10:0] nl_abs_acc_sdt;
  reg [5:0] reg_vout_rsc_mgc_out_stdreg_d_tmp;
  reg [3:0] reg_vout_rsc_mgc_out_stdreg_d_tmp_1;
  reg [5:0] reg_vout_rsc_mgc_out_stdreg_d_tmp_2;
  reg [3:0] reg_vout_rsc_mgc_out_stdreg_d_tmp_3;
  reg [9:0] reg_vout_rsc_mgc_out_stdreg_d_tmp_4;
  wire [12:0] FRAME_acc_26_psp_sva;
  wire [14:0] nl_FRAME_acc_26_psp_sva;
  wire [12:0] acc_2_psp_sva;
  wire [14:0] nl_acc_2_psp_sva;
  wire [13:0] FRAME_acc_48_psp_sva;
  wire [14:0] nl_FRAME_acc_48_psp_sva;
  wire [13:0] abs_4_acc_sdt_sva;
  wire [14:0] nl_abs_4_acc_sdt_sva;
  wire [12:0] FRAME_acc_44_psp_sva;
  wire [14:0] nl_FRAME_acc_44_psp_sva;
  wire [12:0] FRAME_acc_13_psp_sva;
  wire [14:0] nl_FRAME_acc_13_psp_sva;
  wire [12:0] FRAME_acc_35_psp_sva;
  wire [14:0] nl_FRAME_acc_35_psp_sva;
  wire [12:0] FRAME_acc_4_psp_sva;
  wire [14:0] nl_FRAME_acc_4_psp_sva;
  wire [10:0] FRAME_acc_12_itm;
  wire [11:0] nl_FRAME_acc_12_itm;
  wire [10:0] FRAME_acc_3_itm;
  wire [11:0] nl_FRAME_acc_3_itm;
  wire [10:0] acc_1_itm;
  wire [11:0] nl_acc_1_itm;


  // Interconnect Declarations for Component Instantiations 
  assign nl_abs_acc_sdt = (readslicef_11_10_1((({((FRAME_acc_26_psp_sva[9]) ^ (FRAME_acc_26_psp_sva[12]))
      , ((FRAME_acc_26_psp_sva[8]) ^ (FRAME_acc_26_psp_sva[12])) , ((FRAME_acc_26_psp_sva[7])
      ^ (FRAME_acc_26_psp_sva[12])) , ((FRAME_acc_26_psp_sva[6]) ^ (FRAME_acc_26_psp_sva[12]))
      , ((FRAME_acc_26_psp_sva[5]) ^ (FRAME_acc_26_psp_sva[12])) , ((FRAME_acc_26_psp_sva[4])
      ^ (FRAME_acc_26_psp_sva[12])) , ((FRAME_acc_26_psp_sva[3]) ^ (FRAME_acc_26_psp_sva[12]))
      , ((FRAME_acc_26_psp_sva[2]) ^ (FRAME_acc_26_psp_sva[12])) , ((FRAME_acc_26_psp_sva[1])
      ^ (FRAME_acc_26_psp_sva[12])) , ((FRAME_acc_26_psp_sva[0]) ^ (FRAME_acc_26_psp_sva[12]))
      , 1'b1}) + conv_u2u_2_11({(acc_2_psp_sva[12]) , (FRAME_acc_26_psp_sva[12])}))))
      + ({((acc_2_psp_sva[9]) ^ (acc_2_psp_sva[12])) , ((acc_2_psp_sva[8]) ^ (acc_2_psp_sva[12]))
      , ((acc_2_psp_sva[7]) ^ (acc_2_psp_sva[12])) , ((acc_2_psp_sva[6]) ^ (acc_2_psp_sva[12]))
      , ((acc_2_psp_sva[5]) ^ (acc_2_psp_sva[12])) , ((acc_2_psp_sva[4]) ^ (acc_2_psp_sva[12]))
      , ((acc_2_psp_sva[3]) ^ (acc_2_psp_sva[12])) , ((acc_2_psp_sva[2]) ^ (acc_2_psp_sva[12]))
      , ((acc_2_psp_sva[1]) ^ (acc_2_psp_sva[12])) , ((acc_2_psp_sva[0]) ^ (acc_2_psp_sva[12]))});
  assign abs_acc_sdt = nl_abs_acc_sdt[9:0];
  assign vout_rsc_mgc_out_stdreg_d = {reg_vout_rsc_mgc_out_stdreg_d_tmp , reg_vout_rsc_mgc_out_stdreg_d_tmp_1
      , reg_vout_rsc_mgc_out_stdreg_d_tmp_2 , reg_vout_rsc_mgc_out_stdreg_d_tmp_3
      , reg_vout_rsc_mgc_out_stdreg_d_tmp_4};
  assign nl_FRAME_acc_26_psp_sva = ({1'b1 , (({2'b11 , (~ regs_regs_slc_regs_regs_2_itm)})
      + ({1'b1 , (~ (reg_regs_regs_0_sva_cse[29:20])) , 1'b1}))}) + (conv_s2s_12_13(readslicef_13_12_1((conv_s2s_12_13({acc_1_itm
      , 1'b1}) + conv_u2s_12_13({(reg_regs_regs_0_sva_cse[89:80]) , 2'b1})))) + conv_u2s_11_13(readslicef_12_11_1((conv_u2u_11_12({(vin_rsc_mgc_in_wire_d[89:80])
      , 1'b1}) + conv_u2u_11_12({regs_regs_slc_regs_regs_2_6_itm , 1'b1})))));
  assign FRAME_acc_26_psp_sva = nl_FRAME_acc_26_psp_sva[12:0];
  assign nl_acc_2_psp_sva = ({1'b1 , (({2'b11 , (~ (vin_rsc_mgc_in_wire_d[89:80]))})
      + ({1'b1 , (~ (vin_rsc_mgc_in_wire_d[59:50])) , 1'b1}))}) + (conv_s2s_12_13(readslicef_13_12_1((conv_s2s_12_13({acc_1_itm
      , 1'b1}) + conv_u2s_12_13({regs_regs_slc_regs_regs_2_3_itm , 2'b1})))) + conv_u2s_11_13(readslicef_12_11_1((conv_u2u_11_12({regs_regs_slc_regs_regs_2_itm
      , 1'b1}) + conv_u2u_11_12({regs_regs_slc_regs_regs_2_6_itm , 1'b1})))));
  assign acc_2_psp_sva = nl_acc_2_psp_sva[12:0];
  assign nl_FRAME_acc_48_psp_sva = conv_u2u_13_14(readslicef_14_13_1((conv_u2u_13_14({((FRAME_acc_35_psp_sva[11])
      ^ (FRAME_acc_35_psp_sva[12])) , ((FRAME_acc_35_psp_sva[10]) ^ (FRAME_acc_35_psp_sva[12]))
      , ((FRAME_acc_35_psp_sva[9]) ^ (FRAME_acc_35_psp_sva[12])) , ((FRAME_acc_35_psp_sva[8])
      ^ (FRAME_acc_35_psp_sva[12])) , ((FRAME_acc_35_psp_sva[7]) ^ (FRAME_acc_35_psp_sva[12]))
      , ((FRAME_acc_35_psp_sva[6]) ^ (FRAME_acc_35_psp_sva[12])) , ((FRAME_acc_35_psp_sva[5])
      ^ (FRAME_acc_35_psp_sva[12])) , ((FRAME_acc_35_psp_sva[4]) ^ (FRAME_acc_35_psp_sva[12]))
      , ((FRAME_acc_35_psp_sva[3]) ^ (FRAME_acc_35_psp_sva[12])) , ((FRAME_acc_35_psp_sva[2])
      ^ (FRAME_acc_35_psp_sva[12])) , ((FRAME_acc_35_psp_sva[1]) ^ (FRAME_acc_35_psp_sva[12]))
      , ((FRAME_acc_35_psp_sva[0]) ^ (FRAME_acc_35_psp_sva[12])) , 1'b1}) + conv_u2u_2_14({(FRAME_acc_4_psp_sva[12])
      , (FRAME_acc_35_psp_sva[12])})))) + conv_u2u_12_14({((FRAME_acc_4_psp_sva[11])
      ^ (FRAME_acc_4_psp_sva[12])) , ((FRAME_acc_4_psp_sva[10]) ^ (FRAME_acc_4_psp_sva[12]))
      , ((FRAME_acc_4_psp_sva[9]) ^ (FRAME_acc_4_psp_sva[12])) , ((FRAME_acc_4_psp_sva[8])
      ^ (FRAME_acc_4_psp_sva[12])) , ((FRAME_acc_4_psp_sva[7]) ^ (FRAME_acc_4_psp_sva[12]))
      , ((FRAME_acc_4_psp_sva[6]) ^ (FRAME_acc_4_psp_sva[12])) , ((FRAME_acc_4_psp_sva[5])
      ^ (FRAME_acc_4_psp_sva[12])) , ((FRAME_acc_4_psp_sva[4]) ^ (FRAME_acc_4_psp_sva[12]))
      , ((FRAME_acc_4_psp_sva[3]) ^ (FRAME_acc_4_psp_sva[12])) , ((FRAME_acc_4_psp_sva[2])
      ^ (FRAME_acc_4_psp_sva[12])) , ((FRAME_acc_4_psp_sva[1]) ^ (FRAME_acc_4_psp_sva[12]))
      , ((FRAME_acc_4_psp_sva[0]) ^ (FRAME_acc_4_psp_sva[12]))});
  assign FRAME_acc_48_psp_sva = nl_FRAME_acc_48_psp_sva[13:0];
  assign nl_abs_4_acc_sdt_sva = conv_u2u_13_14(readslicef_14_13_1((conv_u2u_13_14({((FRAME_acc_44_psp_sva[11])
      ^ (FRAME_acc_44_psp_sva[12])) , ((FRAME_acc_44_psp_sva[10]) ^ (FRAME_acc_44_psp_sva[12]))
      , ((FRAME_acc_44_psp_sva[9]) ^ (FRAME_acc_44_psp_sva[12])) , ((FRAME_acc_44_psp_sva[8])
      ^ (FRAME_acc_44_psp_sva[12])) , ((FRAME_acc_44_psp_sva[7]) ^ (FRAME_acc_44_psp_sva[12]))
      , ((FRAME_acc_44_psp_sva[6]) ^ (FRAME_acc_44_psp_sva[12])) , ((FRAME_acc_44_psp_sva[5])
      ^ (FRAME_acc_44_psp_sva[12])) , ((FRAME_acc_44_psp_sva[4]) ^ (FRAME_acc_44_psp_sva[12]))
      , ((FRAME_acc_44_psp_sva[3]) ^ (FRAME_acc_44_psp_sva[12])) , ((FRAME_acc_44_psp_sva[2])
      ^ (FRAME_acc_44_psp_sva[12])) , ((FRAME_acc_44_psp_sva[1]) ^ (FRAME_acc_44_psp_sva[12]))
      , ((FRAME_acc_44_psp_sva[0]) ^ (FRAME_acc_44_psp_sva[12])) , 1'b1}) + conv_u2u_2_14({(FRAME_acc_13_psp_sva[12])
      , (FRAME_acc_44_psp_sva[12])})))) + conv_u2u_12_14({((FRAME_acc_13_psp_sva[11])
      ^ (FRAME_acc_13_psp_sva[12])) , ((FRAME_acc_13_psp_sva[10]) ^ (FRAME_acc_13_psp_sva[12]))
      , ((FRAME_acc_13_psp_sva[9]) ^ (FRAME_acc_13_psp_sva[12])) , ((FRAME_acc_13_psp_sva[8])
      ^ (FRAME_acc_13_psp_sva[12])) , ((FRAME_acc_13_psp_sva[7]) ^ (FRAME_acc_13_psp_sva[12]))
      , ((FRAME_acc_13_psp_sva[6]) ^ (FRAME_acc_13_psp_sva[12])) , ((FRAME_acc_13_psp_sva[5])
      ^ (FRAME_acc_13_psp_sva[12])) , ((FRAME_acc_13_psp_sva[4]) ^ (FRAME_acc_13_psp_sva[12]))
      , ((FRAME_acc_13_psp_sva[3]) ^ (FRAME_acc_13_psp_sva[12])) , ((FRAME_acc_13_psp_sva[2])
      ^ (FRAME_acc_13_psp_sva[12])) , ((FRAME_acc_13_psp_sva[1]) ^ (FRAME_acc_13_psp_sva[12]))
      , ((FRAME_acc_13_psp_sva[0]) ^ (FRAME_acc_13_psp_sva[12]))});
  assign abs_4_acc_sdt_sva = nl_abs_4_acc_sdt_sva[13:0];
  assign nl_FRAME_acc_44_psp_sva = ({1'b1 , (({2'b11 , (~ regs_regs_slc_regs_regs_2_2_itm)})
      + ({1'b1 , (~ (reg_regs_regs_0_sva_cse[9:0])) , 1'b1}))}) + (conv_s2s_12_13(readslicef_13_12_1((conv_s2s_12_13({FRAME_acc_12_itm
      , 1'b1}) + conv_u2s_12_13({(reg_regs_regs_0_sva_cse[69:60]) , 2'b1})))) + conv_u2s_11_13(readslicef_12_11_1((conv_u2u_11_12({(vin_rsc_mgc_in_wire_d[69:60])
      , 1'b1}) + conv_u2u_11_12({regs_regs_slc_regs_regs_2_8_itm , 1'b1})))));
  assign FRAME_acc_44_psp_sva = nl_FRAME_acc_44_psp_sva[12:0];
  assign nl_FRAME_acc_13_psp_sva = ({1'b1 , (({2'b11 , (~ (vin_rsc_mgc_in_wire_d[69:60]))})
      + ({1'b1 , (~ (vin_rsc_mgc_in_wire_d[39:30])) , 1'b1}))}) + (conv_s2s_12_13(readslicef_13_12_1((conv_s2s_12_13({FRAME_acc_12_itm
      , 1'b1}) + conv_u2s_12_13({regs_regs_slc_regs_regs_2_5_itm , 2'b1})))) + conv_u2s_11_13(readslicef_12_11_1((conv_u2u_11_12({regs_regs_slc_regs_regs_2_2_itm
      , 1'b1}) + conv_u2u_11_12({regs_regs_slc_regs_regs_2_8_itm , 1'b1})))));
  assign FRAME_acc_13_psp_sva = nl_FRAME_acc_13_psp_sva[12:0];
  assign nl_FRAME_acc_35_psp_sva = ({1'b1 , (({2'b11 , (~ regs_regs_slc_regs_regs_2_1_itm)})
      + ({1'b1 , (~ (reg_regs_regs_0_sva_cse[19:10])) , 1'b1}))}) + (conv_s2s_12_13(readslicef_13_12_1((conv_s2s_12_13({FRAME_acc_3_itm
      , 1'b1}) + conv_u2s_12_13({(reg_regs_regs_0_sva_cse[79:70]) , 2'b1})))) + conv_u2s_11_13(readslicef_12_11_1((conv_u2u_11_12({(vin_rsc_mgc_in_wire_d[79:70])
      , 1'b1}) + conv_u2u_11_12({regs_regs_slc_regs_regs_2_7_itm , 1'b1})))));
  assign FRAME_acc_35_psp_sva = nl_FRAME_acc_35_psp_sva[12:0];
  assign nl_FRAME_acc_4_psp_sva = ({1'b1 , (({2'b11 , (~ (vin_rsc_mgc_in_wire_d[79:70]))})
      + ({1'b1 , (~ (vin_rsc_mgc_in_wire_d[49:40])) , 1'b1}))}) + (conv_s2s_12_13(readslicef_13_12_1((conv_s2s_12_13({FRAME_acc_3_itm
      , 1'b1}) + conv_u2s_12_13({regs_regs_slc_regs_regs_2_4_itm , 2'b1})))) + conv_u2s_11_13(readslicef_12_11_1((conv_u2u_11_12({regs_regs_slc_regs_regs_2_1_itm
      , 1'b1}) + conv_u2u_11_12({regs_regs_slc_regs_regs_2_7_itm , 1'b1})))));
  assign FRAME_acc_4_psp_sva = nl_FRAME_acc_4_psp_sva[12:0];
  assign nl_FRAME_acc_12_itm = ({1'b1 , (~ (vin_rsc_mgc_in_wire_d[9:0]))}) + 11'b1;
  assign FRAME_acc_12_itm = nl_FRAME_acc_12_itm[10:0];
  assign nl_FRAME_acc_3_itm = ({1'b1 , (~ (vin_rsc_mgc_in_wire_d[19:10]))}) + 11'b1;
  assign FRAME_acc_3_itm = nl_FRAME_acc_3_itm[10:0];
  assign nl_acc_1_itm = ({1'b1 , (~ (vin_rsc_mgc_in_wire_d[29:20]))}) + 11'b1;
  assign acc_1_itm = nl_acc_1_itm[10:0];
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      regs_regs_slc_regs_regs_2_2_itm <= 10'b0;
      reg_regs_regs_0_sva_cse <= 90'b0;
      regs_regs_slc_regs_regs_2_8_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_1_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_7_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_6_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_5_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_4_itm <= 10'b0;
      regs_regs_slc_regs_regs_2_3_itm <= 10'b0;
      reg_vout_rsc_mgc_out_stdreg_d_tmp <= 6'b0;
      reg_vout_rsc_mgc_out_stdreg_d_tmp_1 <= 4'b0;
      reg_vout_rsc_mgc_out_stdreg_d_tmp_2 <= 6'b0;
      reg_vout_rsc_mgc_out_stdreg_d_tmp_3 <= 4'b0;
      reg_vout_rsc_mgc_out_stdreg_d_tmp_4 <= 10'b0;
    end
    else begin
      if ( en ) begin
        regs_regs_slc_regs_regs_2_2_itm <= reg_regs_regs_0_sva_cse[9:0];
        reg_regs_regs_0_sva_cse <= vin_rsc_mgc_in_wire_d;
        regs_regs_slc_regs_regs_2_8_itm <= reg_regs_regs_0_sva_cse[69:60];
        regs_regs_slc_regs_regs_2_1_itm <= reg_regs_regs_0_sva_cse[19:10];
        regs_regs_slc_regs_regs_2_7_itm <= reg_regs_regs_0_sva_cse[79:70];
        regs_regs_slc_regs_regs_2_itm <= reg_regs_regs_0_sva_cse[29:20];
        regs_regs_slc_regs_regs_2_6_itm <= reg_regs_regs_0_sva_cse[89:80];
        regs_regs_slc_regs_regs_2_5_itm <= reg_regs_regs_0_sva_cse[39:30];
        regs_regs_slc_regs_regs_2_4_itm <= reg_regs_regs_0_sva_cse[49:40];
        regs_regs_slc_regs_regs_2_3_itm <= reg_regs_regs_0_sva_cse[59:50];
        reg_vout_rsc_mgc_out_stdreg_d_tmp <= abs_acc_sdt[9:4];
        reg_vout_rsc_mgc_out_stdreg_d_tmp_1 <= (abs_acc_sdt[3:0]) | (FRAME_acc_48_psp_sva[13:10]);
        reg_vout_rsc_mgc_out_stdreg_d_tmp_2 <= FRAME_acc_48_psp_sva[9:4];
        reg_vout_rsc_mgc_out_stdreg_d_tmp_3 <= (FRAME_acc_48_psp_sva[3:0]) | (abs_4_acc_sdt_sva[13:10]);
        reg_vout_rsc_mgc_out_stdreg_d_tmp_4 <= abs_4_acc_sdt_sva[9:0];
      end
    end
  end

  function [9:0] readslicef_11_10_1;
    input [10:0] vector;
    reg [10:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_11_10_1 = tmp[9:0];
  end
  endfunction


  function [11:0] readslicef_13_12_1;
    input [12:0] vector;
    reg [12:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_13_12_1 = tmp[11:0];
  end
  endfunction


  function [10:0] readslicef_12_11_1;
    input [11:0] vector;
    reg [11:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_12_11_1 = tmp[10:0];
  end
  endfunction


  function [12:0] readslicef_14_13_1;
    input [13:0] vector;
    reg [13:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_14_13_1 = tmp[12:0];
  end
  endfunction


  function  [10:0] conv_u2u_2_11 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_11 = {{9{1'b0}}, vector};
  end
  endfunction


  function signed [12:0] conv_s2s_12_13 ;
    input signed [11:0]  vector ;
  begin
    conv_s2s_12_13 = {vector[11], vector};
  end
  endfunction


  function signed [12:0] conv_u2s_12_13 ;
    input [11:0]  vector ;
  begin
    conv_u2s_12_13 = {1'b0, vector};
  end
  endfunction


  function signed [12:0] conv_u2s_11_13 ;
    input [10:0]  vector ;
  begin
    conv_u2s_11_13 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [13:0] conv_u2u_13_14 ;
    input [12:0]  vector ;
  begin
    conv_u2u_13_14 = {1'b0, vector};
  end
  endfunction


  function  [13:0] conv_u2u_2_14 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_14 = {{12{1'b0}}, vector};
  end
  endfunction


  function  [13:0] conv_u2u_12_14 ;
    input [11:0]  vector ;
  begin
    conv_u2u_12_14 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    mean_vga
//  Generated from file(s):
//    7) $PROJECT_HOME/../vga_blur/blur.c
// ------------------------------------------------------------------


module mean_vga (
  vin_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [89:0] vin_rsc_z;
  output [29:0] vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [89:0] vin_rsc_mgc_in_wire_d;
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(90)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  mean_vga_core mean_vga_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



